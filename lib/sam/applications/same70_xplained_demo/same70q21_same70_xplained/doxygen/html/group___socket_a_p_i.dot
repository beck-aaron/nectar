digraph "Functions"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=FreeSans,fontsize=10,labelfontname=FreeSans,labelfontsize=10];
  node [fontname=FreeSans,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir=LR;
  Node10 [label="accept",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___accept_fn.html",tooltip="The function has no current implementation."];
  Node8 [label="bind",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___bind_fn.html",tooltip="Asynchronous bind function associates the provided address and local port to the socket."];
  Node17 [label="close",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___close_socket_fn.html",tooltip="Synchronous close function, releases all the socket assigned resources."];
  Node11 [label="connect",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___connect_fn.html",tooltip="Establishes a TCP connection with a remote server."];
  Node22 [label="getsockopt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___get_socket_options_fn.html",tooltip="Get socket options retrieves This Function isn't implemented yet but this is the form that will be re..."];
  Node18 [label="nmi_inet_addr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___inet_address_fn.html",tooltip="Synchronous function which returns a BSD socket compliant Internet Protocol (IPv4) socket address."];
  Node9 [label="listen",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___listen_fn.html",tooltip="After successful socket binding to an IP address and port on the system, start listening on a passive..."];
  Node23 [label="m2m_ping_req",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___ping_fn.html",tooltip="The function sends ping request to the given IP Address."];
  Node13 [label="recv",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___receive_fn.html",tooltip="An asynchronous receive function, used to retrieve data from a TCP stream."];
  Node14 [label="recvfrom",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___receive_from_socket_fn.html",tooltip="Receives data from a UDP Socket."];
  Node12 [label="secure",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___secure_fn.html",tooltip="Converts an (insecure) TCP connection with a remote server into a secure TLS-over-TCP connection."];
  Node15 [label="send",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___send_fn.html",tooltip="Asynchronous sending function, used to send data on a TCP/UDP socket."];
  Node16 [label="sendto",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___send_to_socket_fn.html",tooltip="Asynchronous sending function, used to send data on a UDP socket."];
  Node21 [label="setsockopt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___set_socket_option_fn.html",tooltip="The setsockopt() function shall set the option specified by the option_name argument,..."];
  Node1 [label="Functions",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node6 [label="registerSocketCallback",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___socket_callback_fn.html",tooltip="Register two callback functions one for asynchronous socket events and the other one for DNS callback..."];
  Node4 [label="socketDeInit",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___socket_de_initialization_fn.html",tooltip=" "];
  Node7 [label="socket",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___socket_fn.html",tooltip="Synchronous socket allocation function based on the specified socket type."];
  Node2 [label="Socket",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___socket_header.html",tooltip="BSD compatible socket interface between the host layer and the network protocol stacks in the firmwar..."];
  Node3 [label="socketInit",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___socket_initialization_fn.html",tooltip="The function performs the necessary initializations for the socket library through the following step..."];
  Node5 [label="socketState",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___socket_state_fn.html",tooltip=" "];
  Node19 [label="gethostbyname",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__gethostbyname_fn.html",tooltip="Asynchronous DNS resolving function."];
  Node20 [label="sslEnableCertExpirationCheck",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__ssl_enable_cert_expiration_check_fn.html",tooltip="Configure the behavior of the SSL Library for Certificate Expiry Validation."];
  Node2->Node1 [shape=plaintext, dir="back", style="solid"];
  Node1->Node3 [shape=plaintext, dir="back", style="solid"];
  Node1->Node4 [shape=plaintext, dir="back", style="solid"];
  Node1->Node5 [shape=plaintext, dir="back", style="solid"];
  Node1->Node6 [shape=plaintext, dir="back", style="solid"];
  Node1->Node7 [shape=plaintext, dir="back", style="solid"];
  Node1->Node8 [shape=plaintext, dir="back", style="solid"];
  Node1->Node9 [shape=plaintext, dir="back", style="solid"];
  Node1->Node10 [shape=plaintext, dir="back", style="solid"];
  Node1->Node11 [shape=plaintext, dir="back", style="solid"];
  Node1->Node12 [shape=plaintext, dir="back", style="solid"];
  Node1->Node13 [shape=plaintext, dir="back", style="solid"];
  Node1->Node14 [shape=plaintext, dir="back", style="solid"];
  Node1->Node15 [shape=plaintext, dir="back", style="solid"];
  Node1->Node16 [shape=plaintext, dir="back", style="solid"];
  Node1->Node17 [shape=plaintext, dir="back", style="solid"];
  Node1->Node18 [shape=plaintext, dir="back", style="solid"];
  Node1->Node19 [shape=plaintext, dir="back", style="solid"];
  Node1->Node20 [shape=plaintext, dir="back", style="solid"];
  Node1->Node21 [shape=plaintext, dir="back", style="solid"];
  Node1->Node22 [shape=plaintext, dir="back", style="solid"];
  Node1->Node23 [shape=plaintext, dir="back", style="solid"];
}
