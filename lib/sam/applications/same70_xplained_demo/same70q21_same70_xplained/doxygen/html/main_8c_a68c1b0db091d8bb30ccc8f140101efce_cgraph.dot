digraph "wifi_connect"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=FreeSans,fontsize=10,labelfontname=FreeSans,labelfontsize=10];
  node [fontname=FreeSans,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [label="wifi_connect",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [color="steelblue1",style="solid"];
  Node2 [label="flash_init",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__sam__services__flash__efc__group.html#ga0c80af0123bd16120b4dd8ededdafc1e",tooltip="Initialize the flash service."];
  Node2 -> Node3 [color="steelblue1",style="solid"];
  Node3 [label="efc_init",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__sam__drivers__efc__group.html#ga4388e032f274942c2e1c59ad87dd7e6d",tooltip="Initialize the EFC controller."];
  Node3 -> Node4 [color="steelblue1",style="solid"];
  Node4 [label="efc_write_fmr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__sam__drivers__efc__group.html#ga3107655bd6525e135e2d89faa4e45a87",tooltip="Set mode register."];
  Node1 -> Node5 [color="steelblue1",style="solid"];
  Node5 [label="flash_unlock",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__sam__services__flash__efc__group.html#ga92967c09ee59e053fb9e2d9c809bea76",tooltip="Unlock all the regions in the given address range."];
  Node5 -> Node6 [color="steelblue1",style="solid"];
  Node6 [label="compute_lock_range",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__sam__services__flash__efc__group.html#ga83e3e9ffc2eb9677f80cef7a2a9321a7",tooltip="Compute the lock range associated with the given address range."];
  Node5 -> Node7 [color="steelblue1",style="solid"];
  Node7 [label="efc_perform_command",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__sam__drivers__efc__group.html#ga48f3f38debde0c03c936f777aef6cc2e",tooltip="Perform the given command and wait until its completion (or an error)."];
  Node7 -> Node8 [color="steelblue1",style="solid"];
  Node8 [label="cpu_irq_restore",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__interrupt__group.html#ga428178bc346431936fddf52ad1ebd6fa",tooltip="Restore global interrupt flags."];
  Node8 -> Node9 [color="steelblue1",style="solid"];
  Node9 [label="cpu_irq_is_enabled\l_flags",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__interrupt__group.html#ga4dffd77dae2b3b3c5bce2612db656e48",tooltip="Check if interrupts are globally enabled in supplied flags."];
  Node7 -> Node10 [color="steelblue1",style="solid"];
  Node10 [label="cpu_irq_save",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__interrupt__group.html#ga5992cb015c55a0f4ed563e66a8793771",tooltip="Get and clear the global interrupt flags."];
  Node7 -> Node11 [color="steelblue1",style="solid"];
  Node11 [label="efc_perform_fcr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__sam__drivers__efc__group.html#gab1eca9d39607dadbaa19e33b0dd6097c",tooltip="Perform command."];
  Node5 -> Node12 [color="steelblue1",style="solid"];
  Node12 [label="translate_address",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__sam__services__flash__efc__group.html#ga01b9af7beb63eff8c6074294928c96ba",tooltip="Translate the given flash address to page and offset values."];
  Node12 -> Node13 [color="steelblue1",style="solid"];
  Node13 [label="flash_is_gpnvm_set",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__sam__services__flash__efc__group.html#gad38e5d6ab823006834087ee095d88f93",tooltip="Check if the given GPNVM bit is set or not."];
  Node13 -> Node14 [color="steelblue1",style="solid"];
  Node14 [label="efc_get_result",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__sam__drivers__efc__group.html#ga9d1b951eb5f4d3f280d25fa6ad01ff4c",tooltip="Get the result of the last executed command."];
  Node13 -> Node7 [color="steelblue1",style="solid"];
  Node1 -> Node15 [color="steelblue1",style="solid"];
  Node15 [label="flash_write",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__sam__services__flash__efc__group.html#gaff74a2ae2a121218712ce10439a86362",tooltip="Write a data buffer on flash."];
  Node15 -> Node16 [color="steelblue1",style="solid"];
  Node16 [label="compute_address",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__sam__services__flash__efc__group.html#ga50ae97d0c0984dc24d460a78f99d06b1",tooltip="Compute the address of a flash by the given page and offset."];
  Node16 -> Node13 [color="steelblue1",style="solid"];
  Node15 -> Node17 [color="steelblue1",style="solid"];
  Node17 [label="efc_get_wait_state",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__sam__drivers__efc__group.html#ga39dabea6b691034d904c06cb08d60d36",tooltip="Get flash wait state."];
  Node15 -> Node7 [color="steelblue1",style="solid"];
  Node15 -> Node18 [color="steelblue1",style="solid"];
  Node18 [label="efc_set_wait_state",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__sam__drivers__efc__group.html#gad128919fd18ca8f30155820220012deb",tooltip="Set flash wait state."];
  Node18 -> Node4 [color="steelblue1",style="solid"];
  Node15 -> Node12 [color="steelblue1",style="solid"];
  Node1 -> Node19 [color="steelblue1",style="solid"];
  Node19 [label="ili9488_draw_string",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__ili9488__display__group.html#ga34c0cd3a1a7ac63ddb3286c12ff92733",tooltip="Draw a string on LCD."];
  Node19 -> Node20 [color="steelblue1",style="solid"];
  Node20 [label="ili9488_draw_char",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__ili9488__display__group.html#ga423be5779ccf536eaa8a7daa2629c764",tooltip="Draw an ASCII character on LCD."];
  Node20 -> Node21 [color="steelblue1",style="solid"];
  Node21 [label="ili9488_draw_pixel",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__ili9488__display__group.html#ga1139df88f3567561a6be9d08e7c5e87a",tooltip="Draw a pixel on LCD."];
  Node21 -> Node22 [color="steelblue1",style="solid"];
  Node22 [label="ili9488_set_cursor\l_position",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__ili9488__display__group.html#ga7fab1376515c984e57066f9f29ba8e88",tooltip="Set cursor of LCD screen."];
  Node22 -> Node23 [color="steelblue1",style="solid"];
  Node23 [label="ili9488_write_register",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__ili9488__display__group.html#ga004cc9b339c8d6bc83eab621d620e05f",tooltip="Write data to LCD Register."];
  Node23 -> Node24 [color="steelblue1",style="solid"];
  Node24 [label="pio_set_pin_high",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$group__sam__drivers__pio__group.html#gaa8c613a0858311e6d684b1869d49dd77",tooltip="Drive a GPIO pin to 1."];
  Node23 -> Node26 [color="steelblue1",style="solid"];
  Node26 [label="pio_set_pin_low",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$group__sam__drivers__pio__group.html#ga41f795f6deb585e82b913a959a4b076a",tooltip="Drive a GPIO pin to 0."];
  Node23 -> Node27 [color="steelblue1",style="solid"];
  Node27 [label="spi_write",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$group__sam__drivers__spi__group.html#gaf0aef4a28c69c8ceb6e99b5d79e91e47",tooltip="Write the transmitted data with specified peripheral chip select value."];
  Node23 -> Node29 [color="steelblue1",style="solid"];
  Node29 [label="spi_write_packet",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$spi__master_8c.html#a9d0996dc59ad7f2a593e27710c6cc727",tooltip="Send a sequence of bytes to an SPI device."];
  Node21 -> Node33 [color="steelblue1",style="solid"];
  Node33 [label="ili9488_write_ram_buffer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__ili9488__display__group.html#gaf89cf3147f4b11ff96a0040b5ce19502",tooltip="Write multiple data in buffer to LCD controller."];
  Node33 -> Node24 [color="steelblue1",style="solid"];
  Node33 -> Node29 [color="steelblue1",style="solid"];
  Node21 -> Node34 [color="steelblue1",style="solid"];
  Node34 [label="ili9488_write_ram_prepare",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__ili9488__display__group.html#gaa00306e826e75a712b9d39317ad60179",tooltip="Prepare to write GRAM data."];
  Node34 -> Node26 [color="steelblue1",style="solid"];
  Node34 -> Node27 [color="steelblue1",style="solid"];
  Node1 -> Node35 [color="steelblue1",style="solid"];
  Node35 [label="ili9488_set_foreground\l_color",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__ili9488__display__group.html#gac3013068c26fe39b434fad37e3f7a56e",tooltip="Set foreground color."];
  Node1 -> Node36 [color="steelblue1",style="solid"];
  Node36 [label="ioport_get_pin_level",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__ioport__group.html#ga2d23ff7094fbf483c45f7c081ebd389b",tooltip="Get current value of an IOPORT pin, which has been configured as an input."];
  Node36 -> Node37 [color="steelblue1",style="solid"];
  Node37 [label="arch_ioport_get_pin\l_level",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ioport__pio_8h.html#ac0a9802426ded89c1b92cee9e3675077",tooltip=" "];
  Node37 -> Node38 [color="steelblue1",style="solid"];
  Node38 [label="arch_ioport_pin_to_base",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ioport__pio_8h.html#ae6ad3e99f2ec1f914a991ad6537637ef",tooltip=" "];
  Node38 -> Node39 [color="steelblue1",style="solid"];
  Node39 [label="arch_ioport_pin_to\l_port_id",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ioport__pio_8h.html#a17ab9c7be3b9b2674e7668b6a083d191",tooltip=" "];
  Node38 -> Node40 [color="steelblue1",style="solid"];
  Node40 [label="arch_ioport_port_to_base",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ioport__pio_8h.html#ac2b01a65bf5686910b77f6b606497df2",tooltip=" "];
  Node37 -> Node41 [color="steelblue1",style="solid"];
  Node41 [label="arch_ioport_pin_to_mask",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ioport__pio_8h.html#a69fd7bdfb41664b749080e509798165e",tooltip=" "];
  Node1 -> Node42 [color="steelblue1",style="solid"];
  Node42 [label="m2m_wifi_connect",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___w_l_a_n_c_o_n_n_e_c_t.html#gac7873639780b6a098a5476d133e68130",tooltip="DEPRECATED in v19.6.1 - Kept only for legacy purposes.  Legacy asynchronous API to request connection..."];
  Node42 -> Node43 [color="steelblue1",style="solid"];
  Node43 [label="m2m_wifi_connect_sc",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___w_l_a_n_c_o_n_n_e_c_t.html#gaaa9b5854429a48d64c0fe08ec127d2d6",tooltip="DEPRECATED in v19.6.1 - Kept only for legacy purposes.  Legacy asynchronous API to request connection..."];
  Node43 -> Node44 [color="steelblue1",style="solid"];
  Node44 [label="m2m_strlen",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___c_o_m_m_o_n_a_p_i.html#ga7ab2c19ce29ea364fb1653765732172f",tooltip="Returns the length of a null terminated string buffer."];
  Node43 -> Node45 [color="steelblue1",style="solid"];
  Node45 [label="m2m_wifi_connect_1x\l_mschap2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___w_l_a_n_c_o_n_n_e_c_t.html#gab149cf2271e0332c22c9f991c2459f76",tooltip="Asynchronous API to connect to an access point using WPA(2) Enterprise authentication with MS-CHAP-V2..."];
  Node45 -> Node46 [color="steelblue1",style="solid"];
  Node46 [label="hif_send",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$m2m__hif_8c.html#a13ba8ad11b2ac39516ca787386d16ce0",tooltip="Send packet using host interface."];
  Node46 -> Node47 [color="steelblue1",style="solid"];
  Node47 [label="hif_chip_sleep",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$m2m__hif_8c.html#a41d3f660265e122cbd7417ea8754e8dd",tooltip="To make the chip sleep."];
  Node46 -> Node65 [color="steelblue1",style="solid"];
  Node65 [label="hif_chip_sleep_sc",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$m2m__hif_8c.html#a756a9c1154d55efd6c7924ef1ace5e75",tooltip="To clear the chip sleep but keep the chip sleep."];
  Node45 -> Node58 [color="steelblue1",style="solid"];
  Node58 [label="m2m_memcpy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___c_o_m_m_o_n_a_p_i.html#ga28b094db63be31612f7d2c5af692d3a5",tooltip="Copy specified number of bytes from source buffer to destination buffer."];
  Node45 -> Node76 [color="steelblue1",style="solid"];
  Node76 [label="m2m_memset",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___c_o_m_m_o_n_a_p_i.html#ga245e71a174d65f12926883f76752df93",tooltip="Set specified number of data bytes in specified data buffer to specified value."];
  Node45 -> Node77 [color="steelblue1",style="solid"];
  Node77 [label="m2m_wifi_connect_prepare_msg",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__winc1500__group.html#ga1fe8d77614b61ac76944671f58a5b819",tooltip=" "];
  Node77 -> Node58 [color="steelblue1",style="solid"];
  Node77 -> Node76 [color="steelblue1",style="solid"];
  Node43 -> Node78 [color="steelblue1",style="solid"];
  Node78 [label="m2m_wifi_connect_open",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___w_l_a_n_c_o_n_n_e_c_t.html#gae09397a5bfe314243d2119cce2045724",tooltip="Asynchronous API to connect to an access point using open authentication."];
  Node78 -> Node46 [color="steelblue1",style="solid"];
  Node78 -> Node77 [color="steelblue1",style="solid"];
  Node43 -> Node79 [color="steelblue1",style="solid"];
  Node79 [label="m2m_wifi_connect_psk",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___w_l_a_n_c_o_n_n_e_c_t.html#gaeda17fabd5a574c0e14362bd43b37e84",tooltip="Asynchronous API to connect to an access point using WPA(2) PSK authentication."];
  Node79 -> Node80 [color="steelblue1",style="solid"];
  Node80 [label="hexstr_2_bytes",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$group___c_o_m_m_o_n_a_p_i.html#ga3e2465566e79389652acdb986aaff3c7",tooltip="Converts a string of hex characters to bytes."];
  Node79 -> Node46 [color="steelblue1",style="solid"];
  Node79 -> Node58 [color="steelblue1",style="solid"];
  Node79 -> Node76 [color="steelblue1",style="solid"];
  Node79 -> Node77 [color="steelblue1",style="solid"];
  Node43 -> Node82 [color="steelblue1",style="solid"];
  Node82 [label="m2m_wifi_connect_wep",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___w_l_a_n_c_o_n_n_e_c_t.html#gae1f7c150520403a3c67e9c3a79b314c5",tooltip="Asynchronous API to connect to an access point using WEP authentication."];
  Node82 -> Node80 [color="steelblue1",style="solid"];
  Node82 -> Node46 [color="steelblue1",style="solid"];
  Node82 -> Node77 [color="steelblue1",style="solid"];
}
